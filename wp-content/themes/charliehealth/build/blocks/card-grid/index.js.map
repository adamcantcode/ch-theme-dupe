{"version":3,"file":"card-grid/index.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNqB;AAErBA,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAChD,MAAMC,YAAY,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC;;EAE/D;EACA,MAAMC,YAAY,GAAIC,mBAAmB,IAAK;IAC5CN,MAAM,CAACO,UAAU,GAAG,IAAI,GACpBC,cAAc,CAACF,mBAAmB,CAAC,GACnCG,WAAW,CAACH,mBAAmB,CAAC;EACtC,CAAC;;EAED;EACA,MAAME,cAAc,GAAIF,mBAAmB,IAAK;IAC9C,MAAMI,YAAY,GAAGJ,mBAAmB,CAACK,aAAa,CAAC,gBAAgB,CAAC;IAExE,IAAI,CAACD,YAAY,EAAE;;IAEnB;IACAJ,mBAAmB,CAACM,KAAK,CAACC,aAAa,GAAI,GACzCH,YAAY,CAACI,YAAY,GAAG,EAC7B,IAAG;IAEJJ,YAAY,CAACT,gBAAgB,CAAC,OAAO,EAAGc,CAAC,IAAK;MAC5CA,CAAC,CAACC,cAAc,CAAC,CAAC;MAElB,MAAMC,UAAU,GAAG,CAAC,CAACX,mBAAmB,CAACM,KAAK,CAACM,SAAS;MACxDZ,mBAAmB,CAACM,KAAK,CAACM,SAAS,GAAGD,UAAU,GAC5C,IAAI,GACH,GAAEX,mBAAmB,CAACa,YAAa,IAAG;;MAE3C;MACAT,YAAY,CAACU,WAAW,GAAGH,UAAU,GAAG,WAAW,GAAG,WAAW;MACjEP,YAAY,CAACW,SAAS,CAACC,MAAM,CAAC,gBAAgB,EAAE,CAACL,UAAU,CAAC;MAC5DP,YAAY,CAACW,SAAS,CAACC,MAAM,CAAC,kBAAkB,EAAEL,UAAU,CAAC;IAC/D,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMR,WAAW,GAAIH,mBAAmB,IAAK;IAC3CA,mBAAmB,CAACM,KAAK,CAACC,aAAa,GAAG,EAAE;IAC5CP,mBAAmB,CAACM,KAAK,CAACM,SAAS,GAAG,EAAE;EAC1C,CAAC;;EAED;EACA,IAAIhB,YAAY,CAACqB,MAAM,EAAE;IACvBrB,YAAY,CAACsB,OAAO,CAAElB,mBAAmB,IACvCD,YAAY,CAACC,mBAAmB,CAClC,CAAC;EACH;EAEAN,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM;IACtCC,YAAY,CAACsB,OAAO,CAACnB,YAAY,CAAC;EACpC,CAAC,CAAC;AACJ,CAAC,CAAC,C","sources":["webpack://charliehealth/./blocks/card-grid/index.css","webpack://charliehealth/webpack/bootstrap","webpack://charliehealth/webpack/runtime/make namespace object","webpack://charliehealth/./blocks/card-grid/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './index.css';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  const cardWrappers = document.querySelectorAll('.card-wrapper');\n\n  // Handles window resize and applies appropriate changes\n  const handleResize = (cardWrapperInstance) => {\n    window.innerWidth < 1024\n      ? toggleDropdown(cardWrapperInstance)\n      : resetStyles(cardWrapperInstance);\n  };\n\n  // Adds toggle functionality for dropdowns\n  const toggleDropdown = (cardWrapperInstance) => {\n    const toggleButton = cardWrapperInstance.querySelector('.toggle-button');\n\n    if (!toggleButton) return;\n\n    // Set initial padding for dropdown animation\n    cardWrapperInstance.style.paddingBottom = `${\n      toggleButton.clientHeight + 16\n    }px`;\n\n    toggleButton.addEventListener('click', (e) => {\n      e.preventDefault();\n\n      const isExpanded = !!cardWrapperInstance.style.maxHeight;\n      cardWrapperInstance.style.maxHeight = isExpanded\n        ? null\n        : `${cardWrapperInstance.scrollHeight}px`;\n\n      // Update button styles and text accordingly\n      toggleButton.textContent = isExpanded ? 'Show more' : 'Show less';\n      toggleButton.classList.toggle('button-primary', !isExpanded);\n      toggleButton.classList.toggle('button-secondary', isExpanded);\n    });\n  };\n\n  // Resets padding and maxHeight when window width is above 1024px\n  const resetStyles = (cardWrapperInstance) => {\n    cardWrapperInstance.style.paddingBottom = '';\n    cardWrapperInstance.style.maxHeight = '';\n  };\n\n  // Initialize functionality for each card wrapper\n  if (cardWrappers.length) {\n    cardWrappers.forEach((cardWrapperInstance) =>\n      handleResize(cardWrapperInstance)\n    );\n  }\n\n  window.addEventListener('resize', () => {\n    cardWrappers.forEach(handleResize);\n  });\n});\n"],"names":["window","addEventListener","cardWrappers","document","querySelectorAll","handleResize","cardWrapperInstance","innerWidth","toggleDropdown","resetStyles","toggleButton","querySelector","style","paddingBottom","clientHeight","e","preventDefault","isExpanded","maxHeight","scrollHeight","textContent","classList","toggle","length","forEach"],"sourceRoot":""}