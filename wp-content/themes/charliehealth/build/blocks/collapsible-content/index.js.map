{"version":3,"file":"collapsible-content/index.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNqB;AAErBA,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAChD;EACA,MAAMC,eAAe,GAAGC,QAAQ,CAACC,gBAAgB,CAC/C,8BACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAIC,uBAAuB,IAAK;IAChDC,cAAc,CAACD,uBAAuB,CAAC;EACzC,CAAC;;EAED;EACA,MAAMC,cAAc,GAAID,uBAAuB,IAAK;IAClD,MAAME,YAAY,GAChBF,uBAAuB,CAACG,aAAa,CAAC,gBAAgB,CAAC;IAEzDH,uBAAuB,CAACI,KAAK,CAACC,aAAa,GACzCH,YAAY,CAACI,YAAY,GAAG,EAAE,GAAG,IAAI;IAEvCJ,YAAY,CAACP,gBAAgB,CAAC,OAAO,EAAGY,CAAC,IAAK;MAC5CA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,IAAIR,uBAAuB,CAACI,KAAK,CAACK,SAAS,EAAE;QAC3CT,uBAAuB,CAACI,KAAK,CAACK,SAAS,GAAG,IAAI;QAC9CP,YAAY,CAACQ,WAAW,GAAG,WAAW;QACtCR,YAAY,CAACS,SAAS,CAACC,MAAM,CAAC,gBAAgB,CAAC;QAC/CV,YAAY,CAACS,SAAS,CAACE,GAAG,CAAC,kBAAkB,CAAC;MAChD,CAAC,MAAM;QACLb,uBAAuB,CAACI,KAAK,CAACK,SAAS,GACrCT,uBAAuB,CAACc,YAAY,GAAG,IAAI;QAC7CZ,YAAY,CAACQ,WAAW,GAAG,WAAW;QACtCR,YAAY,CAACS,SAAS,CAACE,GAAG,CAAC,gBAAgB,CAAC;QAC5CX,YAAY,CAACS,SAAS,CAACC,MAAM,CAAC,kBAAkB,CAAC;MACnD;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMG,aAAa,GAAIf,uBAAuB,IAAK;IACjD,IAAIA,uBAAuB,CAACI,KAAK,EAAE;MACjCJ,uBAAuB,CAACI,KAAK,CAACC,aAAa,GAAG,OAAO;IACvD;EACF,CAAC;;EAED;EACA,IAAIT,eAAe,EAAE;IACnBA,eAAe,CAACoB,OAAO,CAAEhB,uBAAuB,IAAK;MACnDD,YAAY,CAACC,uBAAuB,CAAC;IACvC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC,C","sources":["webpack://charliehealth/./blocks/collapsible-content/index.css","webpack://charliehealth/webpack/bootstrap","webpack://charliehealth/webpack/runtime/make namespace object","webpack://charliehealth/./blocks/collapsible-content/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './index.css';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  // Get each set of cards\n  const contentWrappper = document.querySelectorAll(\n    '.collapsible-content-wrapper'\n  );\n\n  // Check window size\n  const handleResize = (contentWrappperInstance) => {\n    toggleDropdown(contentWrappperInstance);\n  };\n\n  // Dropdown animation\n  const toggleDropdown = (contentWrappperInstance) => {\n    const toggleButton =\n      contentWrappperInstance.querySelector('.toggle-button');\n\n    contentWrappperInstance.style.paddingBottom =\n      toggleButton.clientHeight + 16 + 'px';\n\n    toggleButton.addEventListener('click', (e) => {\n      e.preventDefault();\n      if (contentWrappperInstance.style.maxHeight) {\n        contentWrappperInstance.style.maxHeight = null;\n        toggleButton.textContent = 'Show more';\n        toggleButton.classList.remove('button-primary');\n        toggleButton.classList.add('button-secondary');\n      } else {\n        contentWrappperInstance.style.maxHeight =\n          contentWrappperInstance.scrollHeight + 'px';\n        toggleButton.textContent = 'Show less';\n        toggleButton.classList.add('button-primary');\n        toggleButton.classList.remove('button-secondary');\n      }\n    });\n  };\n\n  // Remove padding just in case\n  const removePadding = (contentWrappperInstance) => {\n    if (contentWrappperInstance.style) {\n      contentWrappperInstance.style.paddingBottom = 'unset';\n    }\n  };\n\n  // Only run if card wrapper exist ($style === 'feed')\n  if (contentWrappper) {\n    contentWrappper.forEach((contentWrappperInstance) => {\n      handleResize(contentWrappperInstance);\n    });\n  }\n});\n"],"names":["window","addEventListener","contentWrappper","document","querySelectorAll","handleResize","contentWrappperInstance","toggleDropdown","toggleButton","querySelector","style","paddingBottom","clientHeight","e","preventDefault","maxHeight","textContent","classList","remove","add","scrollHeight","removePadding","forEach"],"sourceRoot":""}