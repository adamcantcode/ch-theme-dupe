{"version":3,"file":"region-map/index.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNqB;AAErBA,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAChD;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMC,eAAe,GAAG,kCAAkC;;EAE1D;EACA,MAAMC,QAAQ,GAAG,IAAIC,gBAAgB,CAAEC,aAAa,IAAK;IACvD;IACA,IAAI;MACF;MACA,KAAK,MAAMC,QAAQ,IAAID,aAAa,EAAE;QACpC;QACA,IACEC,QAAQ,CAACC,UAAU,CAACC,MAAM,GAAG,CAAC,IAC9BF,QAAQ,CAACC,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,CAACP,eAAe,CAAC,EAC/C;UACA;UACAI,QAAQ,CAACC,UAAU,CAAC,CAAC,CAAC,CAACG,MAAM,EAAE;QACjC;MACF;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV;IACF;EACF,CAAC,CAAC;;EAEF;EACAR,QAAQ,CAACS,OAAO,CAACC,QAAQ,CAACC,IAAI,EAAE;IAC9BC,SAAS,EAAE,IAAI;IACfC,OAAO,EAAE;EACX,CAAC,CAAC;AACJ,CAAC,CAAC,C","sources":["webpack://charliehealth/./blocks/region-map/index.css","webpack://charliehealth/webpack/bootstrap","webpack://charliehealth/webpack/runtime/make namespace object","webpack://charliehealth/./blocks/region-map/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './index.css';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  // simplemaps_usmap.hooks.over_region = function (id) {\n  //   const listItem = document.querySelector(`[data-region-id=\"${id}\"]`);\n  //   listItem.classList.toggle('active');\n\n  //   listItem.scrollIntoView({\n  //     behavior: 'smooth',\n  //     block: 'nearest',\n  //     inline: 'start',\n  //   });\n  // };\n  // simplemaps_usmap.hooks.out_region = function (id) {\n  //   const listItem = document.querySelector(`[data-region-id=\"${id}\"]`);\n  //   listItem.classList.toggle('active');\n  // };\n  // const listItems = document.querySelectorAll(`[data-region-id`);\n  // listItems.forEach((item) => {\n  //   item.addEventListener('click', () => {\n  //     window.location =\n  //       simplemaps_usmap.mapdata.regions[\n  //         `${item.getAttribute('data-region-id')}`\n  //       ].url;\n  //   });\n  // });\n\n  // Select the element you want to prevent from being created\n  const elementSelector = 'a[href=\"https://simplemaps.com\"]';\n\n  // Create a MutationObserver instance with a callback function\n  const observer = new MutationObserver((mutationsList) => {\n    // Use try catch to stop console error\n    try {\n      // Loop through each mutation that has occurred\n      for (const mutation of mutationsList) {\n        // Check if the added node matches the element selector\n        if (\n          mutation.addedNodes.length > 0 &&\n          mutation.addedNodes[0].matches(elementSelector)\n        ) {\n          // If it does, remove the element from the DOM\n          mutation.addedNodes[0].remove();\n        }\n      }\n    } catch (e) {\n      return;\n    }\n  });\n\n  // Start observing changes to the DOM\n  observer.observe(document.body, {\n    childList: true,\n    subtree: true,\n  });\n});\n"],"names":["window","addEventListener","elementSelector","observer","MutationObserver","mutationsList","mutation","addedNodes","length","matches","remove","e","observe","document","body","childList","subtree"],"sourceRoot":""}