{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACe,SAASA,SAAS,GAAG;EAClC,IAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;EAChD,IAAIC,QAAQ,GAAGF,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;EACnD,IAAIE,WAAW,GAAGH,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;EACtD,IAAIG,UAAU,GAAGJ,QAAQ,CAACK,gBAAgB,CAAC,gCAAgC,CAAC;EAE5EN,IAAI,CAACO,gBAAgB,CAAC,OAAO,EAAE,MAAM;IACnCP,IAAI,CAACQ,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IAC/BN,QAAQ,CAACK,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IACnCL,WAAW,CAACI,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;EACxC,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;;;;;;;;;;;ACjCA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNwB;AAEqB;AAE7CR,QAAQ,CAACM,gBAAgB,CAAC,kBAAkB,EAAGG,KAAK,IAAK;EACvDX,+DAAS,EAAE;AACb,CAAC,CAAC,C","sources":["webpack://charliehealth/./src/modules/mobile-nav.js","webpack://charliehealth/./src/css/main.css","webpack://charliehealth/webpack/bootstrap","webpack://charliehealth/webpack/runtime/define property getters","webpack://charliehealth/webpack/runtime/hasOwnProperty shorthand","webpack://charliehealth/webpack/runtime/make namespace object","webpack://charliehealth/./src/index.js"],"sourcesContent":["/**\n * Man nav hover actions\n */\nexport default function mobileNav() {\n  var menu = document.querySelector('.open-close');\n  var slideOut = document.querySelector('.slide-out');\n  var mainContent = document.querySelector('.site-main');\n  var navItemSub = document.querySelectorAll('.nav-main-item > .nav-sub-menu');\n\n  menu.addEventListener('click', () => {\n    menu.classList.toggle('active');\n    slideOut.classList.toggle('active');\n    mainContent.classList.toggle('active');\n  });\n\n  // Set active state for top level nav link on hover\n  // navItem.forEach((item) => {\n  //   item.addEventListener('mouseenter', () => {\n  //     item.classList.toggle('active');\n  //   });\n  //   item.addEventListener('mouseleave', () => {\n  //     item.classList.toggle('active');\n  //   });\n  // });\n  // // Set active state for top level nav link on hover of sub menu\n  // navItemSub.forEach((sub) => {\n  //   sub.addEventListener('mouseenter', () => {\n  //     sub.previousElementSibling.classList.toggle('active');\n  //   });\n  //   sub.addEventListener('mouseleave', () => {\n  //     sub.previousElementSibling.classList.toggle('active');\n  //   });\n  // });\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './css/main.css';\n\nimport mobileNav from './modules/mobile-nav';\n\ndocument.addEventListener('DOMContentLoaded', (event) => {\n  mobileNav();\n});\n"],"names":["mobileNav","menu","document","querySelector","slideOut","mainContent","navItemSub","querySelectorAll","addEventListener","classList","toggle","event"],"sourceRoot":""}